//base button class
.pf-c-button {
  font-family: var(--rhd-theme--font-family);
  margin-bottom: var(--rhd-theme--container-spacer-xs);
  //Set base button colors
  color: var(--pf-c-button--Color);
  border-color: var(--pf-c-button--BorderColor);
  background-color: var(--pf-c-button--BackgroundColor);
 
  &:after {
    border-color: var(--pf-c-button--BorderColor);
  }

  @at-root a.pf-c-button {
    --pf-c-content--a--Color: var(--pf-c-button--Color);
    --pf-theme--color--ui-link: var(--pf-c-button--Color);
    --pf-theme--color--ui-link--hover: var(--pf-c-button--hover--Color);
  }

  //Set active button colors
  &:active,
  &.pf-m-active {
    color: var(--pf-c-button--active--Color);
    border-color: var(--pf-c-button--active--BorderColor);
    background-color: var(--pf-c-button--active--BackgroundColor);
    &:after {
      border-color: var(--pf-c-button--active--BorderColor);
    }
  }

  //Set hover and focus button colors
  &:hover,
  &:focus,
  &.pf-m-focus {
    color: var(--pf-c-button--hover--Color);
    border-color: var(--pf-c-button--hover--BorderColor);
    background-color: var(--pf-c-button--hover--BackgroundColor);
    &:after {
      border-color: var(--pf-c-button--hover--BorderColor);
    }
  }

  @media screen and (max-width: $pf-global--breakpoint--sm) {
    display: block;
    margin-bottom: var(--rhd-theme--container-spacer-md);
    width: 100%;
    white-space: normal;
  }

  .pf-c-input-group & {
    // Buttons are 100% width on mobile except within an input group.
    width: auto;
  }
  
  //Set disabled button colors
  &:disabled,
  &.pf-m-disabled {
    color: var(--pf-c-button--disabled--Color);
    border-color: var(--pf-c-button--disabled--BorderColor);
    background-color: var(--pf-c-button--disabled--BackgroundColor);
  }

  // loop through $rhd-theme--base-buttons and generate appropriate button classes.
  @each $themeButtonName, $themeButtonData in $rhd-theme--base-buttons {
    &.pf-#{$themeButtonName} {
      //loop through $themeButtonData write --pf-c-button variables 
      @each $themeButtonItemName, $themeButtonItemData in $themeButtonData {
        --pf-c-button--#{$themeButtonItemName}: #{$themeButtonItemData};
        --pf-c-button--#{$themeButtonName}--#{$themeButtonItemName}: #{$themeButtonItemData};
      }
    }
  }
}

//todo remove when legacy buttons are removed: Add legacy button style classes and extend.
.button {
  @extend .pf-c-button;
  
  &.heavy-cta {
    @extend .pf-m-heavy;
    &.blue {
      @extend .pf-m-primary;
    }
  }

  &.medium-cta {
    @extend .pf-m-secondary;
    &.red {
      @extend .pf-m-secondary-alt;
    }
  }
}

// Scroll to top button for article and search page.
#scroll-to-top {
    background-color: rgba(0, 0, 0, 0.8);
    bottom: 20px;
    color: #fff;
    cursor: pointer;
    display: none;
    font-size: 24px;
    height: 44px;
    line-height: 24px;
    opacity: 0.8;
    padding: 10px 13px;
    position: fixed;
    right: 0;
    text-decoration: none;
    vertical-align: middle;
    width: 49px;
    z-index: 1;

    &:focus,
    &:active,
    &:hover {
      outline: none;
      opacity: 1;
    }
}



